class LibraryClass(object):
    """Documentation for this library.

    This is shown only in docs generated by Libdoc.

    = Section =
  
    We can have sections here.

    == Sub section ==

    And sub sections too.
    """

    def __init__(self):
        self.result = None

    def keyword(self, arg):
        """Example keyword.
        
        Given ``arg`` is just printed i.e. _logged_.
        """
        print arg

    def add(self, *numbers):
        """Adds given numbers.

        Sets result internally. It can be verified with `Result Should Be`.

        Numbers can be given also as strings, they are converted to
        floats. 

        Example:
        | Add              | 1 | 2 |
        | Result Should Be | 3 |   |
        
        For more useless information, see `section` and `sub section`.
        """
        self.result = sum(float(num) for num in numbers)

    def result_should_be(self, expected):
        """Verifies result of previous `Add` keyword."""
        if self.result != float(expected):
            raise AssertionError('%s != %s' % (self.result, expected))


class TestSuiteScope(object):
    ROBOT_LIBRARY_SCOPE = 'TEST SUITE'

    def __init__(self, default_result=None):
        self.result = float(default_result) if default_result else None

    def add_2(self, *numbers):
        self.result = sum(float(num) for num in numbers)

    def result_should_be_2(self, expected):
        if self.result != float(expected):
            raise AssertionError('%s != %s' % (self.result, expected))

